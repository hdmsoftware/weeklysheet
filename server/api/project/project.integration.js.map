{"version":3,"sources":["../../../../server/api/project/project.integration.js"],"names":["app","require","newProject","describe","projects","beforeEach","done","get","expect","end","err","res","body","it","to","be","instanceOf","Array","post","send","name","info","equal","project","_id","afterEach","updatedProject","put","delete"],"mappings":"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","file":"project.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newProject;\n\ndescribe('Project API:', function() {\n\n  describe('GET /api/projects', function() {\n    var projects;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/projects')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          projects = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      expect(projects).to.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/projects', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/projects')\n        .send({\n          name: 'New Project',\n          info: 'This is the brand new project!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newProject = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created project', function() {\n      expect(newProject.name).to.equal('New Project');\n      expect(newProject.info).to.equal('This is the brand new project!!!');\n    });\n\n  });\n\n  describe('GET /api/projects/:id', function() {\n    var project;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/projects/' + newProject._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          project = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      project = {};\n    });\n\n    it('should respond with the requested project', function() {\n      expect(project.name).to.equal('New Project');\n      expect(project.info).to.equal('This is the brand new project!!!');\n    });\n\n  });\n\n  describe('PUT /api/projects/:id', function() {\n    var updatedProject;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/projects/' + newProject._id)\n        .send({\n          name: 'Updated Project',\n          info: 'This is the updated project!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedProject = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedProject = {};\n    });\n\n    it('should respond with the updated project', function() {\n      expect(updatedProject.name).to.equal('Updated Project');\n      expect(updatedProject.info).to.equal('This is the updated project!!!');\n    });\n\n  });\n\n  describe('DELETE /api/projects/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/projects/' + newProject._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when project does not exist', function(done) {\n      request(app)\n        .delete('/api/projects/' + newProject._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}