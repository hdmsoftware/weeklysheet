{"version":3,"sources":["../../../../server/api/user/user.integration.js"],"names":["describe","user","before","destroy","where","then","build","name","email","password","save","after","token","done","post","send","expect","end","err","res","body","it","get","set","_id","toString","to","equal"],"mappings":"AAAA;;AAEA;;;;AACA;;AACA;;;;;;AAEAA,SAAS,WAAT,EAAsB,YAAW;AAC/B,MAAIC,IAAJ;;AAEA;AACAC,SAAO,YAAW;AAChB,WAAO,YAAKC,OAAL,CAAa,EAAEC,OAAO,EAAT,EAAb,EAA4BC,IAA5B,CAAiC,YAAW;AACjDJ,aAAO,YAAKK,KAAL,CAAW;AAChBC,cAAM,WADU;AAEhBC,eAAO,kBAFS;AAGhBC,kBAAU;AAHM,OAAX,CAAP;;AAMA,aAAOR,KAAKS,IAAL,EAAP;AACD,KARM,CAAP;AASD,GAVD;;AAYA;AACAC,QAAM,YAAW;AACf,WAAO,YAAKR,OAAL,CAAa,EAAEC,OAAO,EAAT,EAAb,CAAP;AACD,GAFD;;AAIAJ,WAAS,mBAAT,EAA8B,YAAW;AACvC,QAAIY,KAAJ;;AAEAV,WAAO,UAASW,IAAT,EAAe;AACpB,2CACGC,IADH,CACQ,aADR,EAEGC,IAFH,CAEQ;AACJP,eAAO,kBADH;AAEJC,kBAAU;AAFN,OAFR,EAMGO,MANH,CAMU,GANV,EAOGA,MAPH,CAOU,cAPV,EAO0B,MAP1B,EAQGC,GARH,CAQO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBP,gBAAQO,IAAIC,IAAJ,CAASR,KAAjB;AACAC;AACD,OAXH;AAYD,KAbD;;AAeAQ,OAAG,uDAAH,EAA4D,UAASR,IAAT,EAAe;AACzE,2CACGS,GADH,CACO,eADP,EAEGC,GAFH,CAEO,eAFP,EAEwB,YAAYX,KAFpC,EAGGI,MAHH,CAGU,GAHV,EAIGA,MAJH,CAIU,cAJV,EAI0B,MAJ1B,EAKGC,GALH,CAKO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBH,eAAOG,IAAIC,IAAJ,CAASI,GAAT,CAAaC,QAAb,EAAP,EAAgCC,EAAhC,CAAmCC,KAAnC,CAAyC1B,KAAKuB,GAAL,CAASC,QAAT,EAAzC;AACAZ;AACD,OARH;AASD,KAVD;;AAYAQ,OAAG,kDAAH,EAAuD,UAASR,IAAT,EAAe;AACpE,2CACGS,GADH,CACO,eADP,EAEGN,MAFH,CAEU,GAFV,EAGGC,GAHH,CAGOJ,IAHP;AAID,KALD;AAMD,GApCD;AAqCD,CA1DD","file":"user.integration.js","sourcesContent":["'use strict';\n\nimport app from '../..';\nimport {User} from '../../sqldb';\nimport request from 'supertest';\n\ndescribe('User API:', function() {\n  var user;\n\n  // Clear users before testing\n  before(function() {\n    return User.destroy({ where: {} }).then(function() {\n      user = User.build({\n        name: 'Fake User',\n        email: 'test@example.com',\n        password: 'password'\n      });\n\n      return user.save();\n    });\n  });\n\n  // Clear users after testing\n  after(function() {\n    return User.destroy({ where: {} });\n  });\n\n  describe('GET /api/users/me', function() {\n    var token;\n\n    before(function(done) {\n      request(app)\n        .post('/auth/local')\n        .send({\n          email: 'test@example.com',\n          password: 'password'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          token = res.body.token;\n          done();\n        });\n    });\n\n    it('should respond with a user profile when authenticated', function(done) {\n      request(app)\n        .get('/api/users/me')\n        .set('authorization', 'Bearer ' + token)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          expect(res.body._id.toString()).to.equal(user._id.toString());\n          done();\n        });\n    });\n\n    it('should respond with a 401 when not authenticated', function(done) {\n      request(app)\n        .get('/api/users/me')\n        .expect(401)\n        .end(done);\n    });\n  });\n});\n"]}