{"version":3,"sources":["../../../../server/api/user/user.model.spec.js"],"names":["user","genUser","build","provider","name","email","password","describe","before","sync","then","destroy","where","beforeEach","afterEach","it","expect","findAll","to","eventually","have","length","save","userDup","be","rejected","authenticate","true","not","u"],"mappings":"AAAA;;AAEA;;;;AACA;;;;AACA,IAAIA,IAAJ;AACA,IAAIC,UAAU,SAAVA,OAAU,GAAW;AACvBD,SAAO,YAAKE,KAAL,CAAW;AAChBC,cAAU,OADM;AAEhBC,UAAM,WAFU;AAGhBC,WAAO,kBAHS;AAIhBC,cAAU;AAJM,GAAX,CAAP;AAMA,SAAON,IAAP;AACD,CARD;;AAUAO,SAAS,YAAT,EAAuB,YAAW;AAChCC,SAAO,YAAW;AAChB;AACA,WAAO,YAAKC,IAAL,GAAYC,IAAZ,CAAiB,YAAW;AACjC,aAAO,YAAKC,OAAL,CAAa,EAAEC,OAAO,EAAT,EAAb,CAAP;AACD,KAFM,CAAP;AAGD,GALD;;AAOAC,aAAW,YAAW;AACpBZ;AACD,GAFD;;AAIAa,YAAU,YAAW;AACnB,WAAO,YAAKH,OAAL,CAAa,EAAEC,OAAO,EAAT,EAAb,CAAP;AACD,GAFD;;AAIAG,KAAG,4BAAH,EAAiC,YAAW;AAC1C,WAAOC,OAAO,YAAKC,OAAL,EAAP,EAAuBC,EAAvB,CACJC,UADI,CACOC,IADP,CACYC,MADZ,CACmB,CADnB,CAAP;AAED,GAHD;;AAKAN,KAAG,0CAAH,EAA+C,YAAW;AACxD,WAAOC,OAAOhB,KAAKsB,IAAL,GACXZ,IADW,CACN,YAAW;AACf,UAAIa,UAAUtB,SAAd;AACA,aAAOsB,QAAQD,IAAR,EAAP;AACD,KAJW,CAAP,EAIDJ,EAJC,CAIEM,EAJF,CAIKC,QAJZ;AAKD,GAND;;AAQAlB,WAAS,QAAT,EAAmB,YAAW;AAC5BQ,OAAG,0CAAH,EAA+C,YAAW;AACxDf,WAAKK,KAAL,GAAa,EAAb;AACA,aAAOW,OAAOhB,KAAKsB,IAAL,EAAP,EAAoBJ,EAApB,CAAuBM,EAAvB,CAA0BC,QAAjC;AACD,KAHD;AAID,GALD;;AAOAlB,WAAS,WAAT,EAAsB,YAAW;AAC/BM,eAAW,YAAW;AACpB,aAAOb,KAAKsB,IAAL,EAAP;AACD,KAFD;;AAIAP,OAAG,mCAAH,EAAwC,YAAW;AACjDC,aAAOhB,KAAK0B,YAAL,CAAkB,UAAlB,CAAP,EAAsCR,EAAtC,CAAyCM,EAAzC,CAA4CG,IAA5C;AACD,KAFD;;AAIAZ,OAAG,yCAAH,EAA8C,YAAW;AACvDC,aAAOhB,KAAK0B,YAAL,CAAkB,MAAlB,CAAP,EAAkCR,EAAlC,CAAqCU,GAArC,CAAyCJ,EAAzC,CAA4CG,IAA5C;AACD,KAFD;;AAIAZ,OAAG,4DAAH,EAAiE,YAAW;AAC1Ef,WAAKI,IAAL,GAAY,WAAZ;AACA,aAAOY,OAAOhB,KAAKsB,IAAL,GACXZ,IADW,CACN,UAASmB,CAAT,EAAY;AAChB,eAAOA,EAAEH,YAAF,CAAe,UAAf,CAAP;AACD,OAHW,CAAP,EAGDR,EAHC,CAGEC,UAHF,CAGaK,EAHb,CAGgBG,IAHvB;AAID,KAND;AAOD,GApBD;AAsBD,CA1DD","file":"user.model.spec.js","sourcesContent":["'use strict';\n\nimport app from '../..';\nimport {User} from '../../sqldb';\nvar user;\nvar genUser = function() {\n  user = User.build({\n    provider: 'local',\n    name: 'Fake User',\n    email: 'test@example.com',\n    password: 'password'\n  });\n  return user;\n};\n\ndescribe('User Model', function() {\n  before(function() {\n    // Sync and clear users before testing\n    return User.sync().then(function() {\n      return User.destroy({ where: {} });\n    });\n  });\n\n  beforeEach(function() {\n    genUser();\n  });\n\n  afterEach(function() {\n    return User.destroy({ where: {} });\n  });\n\n  it('should begin with no users', function() {\n    return expect(User.findAll()).to\n      .eventually.have.length(0);\n  });\n\n  it('should fail when saving a duplicate user', function() {\n    return expect(user.save()\n      .then(function() {\n        var userDup = genUser();\n        return userDup.save();\n      })).to.be.rejected;\n  });\n\n  describe('#email', function() {\n    it('should fail when saving without an email', function() {\n      user.email = '';\n      return expect(user.save()).to.be.rejected;\n    });\n  });\n\n  describe('#password', function() {\n    beforeEach(function() {\n      return user.save();\n    });\n\n    it('should authenticate user if valid', function() {\n      expect(user.authenticate('password')).to.be.true;\n    });\n\n    it('should not authenticate user if invalid', function() {\n      expect(user.authenticate('blah')).to.not.be.true;\n    });\n\n    it('should remain the same hash unless the password is updated', function() {\n      user.name = 'Test User';\n      return expect(user.save()\n        .then(function(u) {\n          return u.authenticate('password');\n        })).to.eventually.be.true;\n    });\n  });\n\n});\n"]}