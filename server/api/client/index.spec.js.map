{"version":3,"sources":["../../../../server/api/client/index.spec.js"],"names":["proxyquire","require","noPreserveCache","clientCtrlStub","index","show","create","update","destroy","routerStub","get","sinon","spy","put","patch","post","delete","clientIndex","Router","describe","it","expect","to","equal","withArgs","have","been","calledOnce"],"mappings":"AAAA;;AAEA,IAAIA,aAAaC,QAAQ,YAAR,EAAsBC,eAAtB,EAAjB;;AAEA,IAAIC,iBAAiB;AACnBC,SAAO,kBADY;AAEnBC,QAAM,iBAFa;AAGnBC,UAAQ,mBAHW;AAInBC,UAAQ,mBAJW;AAKnBC,WAAS;AALU,CAArB;;AAQA,IAAIC,aAAa;AACfC,OAAKC,MAAMC,GAAN,EADU;AAEfC,OAAKF,MAAMC,GAAN,EAFU;AAGfE,SAAOH,MAAMC,GAAN,EAHQ;AAIfG,QAAMJ,MAAMC,GAAN,EAJS;AAKfI,UAAQL,MAAMC,GAAN;AALO,CAAjB;;AAQA;AACA,IAAIK,cAAcjB,WAAW,YAAX,EAAyB;AACzC,aAAW;AACTkB,YAAQ,kBAAW;AACjB,aAAOT,UAAP;AACD;AAHQ,GAD8B;AAMzC,yBAAuBN;AANkB,CAAzB,CAAlB;;AASAgB,SAAS,oBAAT,EAA+B,YAAW;;AAExCC,KAAG,0CAAH,EAA+C,YAAW;AACxDC,WAAOJ,WAAP,EAAoBK,EAApB,CAAuBC,KAAvB,CAA6Bd,UAA7B;AACD,GAFD;;AAIAU,WAAS,kBAAT,EAA6B,YAAW;;AAEtCC,OAAG,yCAAH,EAA8C,YAAW;AACvDC,aAAOZ,WAAWC,GAAX,CACJc,QADI,CACK,GADL,EACU,kBADV,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,sBAAT,EAAiC,YAAW;;AAE1CC,OAAG,wCAAH,EAA6C,YAAW;AACtDC,aAAOZ,WAAWC,GAAX,CACJc,QADI,CACK,MADL,EACa,iBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,mBAAT,EAA8B,YAAW;;AAEvCC,OAAG,0CAAH,EAA+C,YAAW;AACxDC,aAAOZ,WAAWM,IAAX,CACJS,QADI,CACK,GADL,EACU,mBADV,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,sBAAT,EAAiC,YAAW;;AAE1CC,OAAG,0CAAH,EAA+C,YAAW;AACxDC,aAAOZ,WAAWI,GAAX,CACJW,QADI,CACK,MADL,EACa,mBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,wBAAT,EAAmC,YAAW;;AAE5CC,OAAG,0CAAH,EAA+C,YAAW;AACxDC,aAAOZ,WAAWK,KAAX,CACJU,QADI,CACK,MADL,EACa,mBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;;AAUAR,WAAS,yBAAT,EAAoC,YAAW;;AAE7CC,OAAG,2CAAH,EAAgD,YAAW;AACzDC,aAAOZ,WAAWO,MAAX,CACJQ,QADI,CACK,MADL,EACa,oBADb,CAAP,EAEIF,EAFJ,CAEOG,IAFP,CAEYC,IAFZ,CAEiBC,UAFjB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar clientCtrlStub = {\n  index: 'clientCtrl.index',\n  show: 'clientCtrl.show',\n  create: 'clientCtrl.create',\n  update: 'clientCtrl.update',\n  destroy: 'clientCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar clientIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './client.controller': clientCtrlStub\n});\n\ndescribe('Client API Router:', function() {\n\n  it('should return an express router instance', function() {\n    expect(clientIndex).to.equal(routerStub);\n  });\n\n  describe('GET /api/clients', function() {\n\n    it('should route to client.controller.index', function() {\n      expect(routerStub.get\n        .withArgs('/', 'clientCtrl.index')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/clients/:id', function() {\n\n    it('should route to client.controller.show', function() {\n      expect(routerStub.get\n        .withArgs('/:id', 'clientCtrl.show')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/clients', function() {\n\n    it('should route to client.controller.create', function() {\n      expect(routerStub.post\n        .withArgs('/', 'clientCtrl.create')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/clients/:id', function() {\n\n    it('should route to client.controller.update', function() {\n      expect(routerStub.put\n        .withArgs('/:id', 'clientCtrl.update')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/clients/:id', function() {\n\n    it('should route to client.controller.update', function() {\n      expect(routerStub.patch\n        .withArgs('/:id', 'clientCtrl.update')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/clients/:id', function() {\n\n    it('should route to client.controller.destroy', function() {\n      expect(routerStub.delete\n        .withArgs('/:id', 'clientCtrl.destroy')\n        ).to.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}