{"version":3,"sources":["../../../../server/api/allocation/allocation.controller.js"],"names":["index","show","showProjectAllocations","create","showtotal","showWorkload","showWeeklyProjects","update","destroy","Sequelize","require","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updateAttributes","then","updated","removeEntity","end","handleEntityNotFound","handleError","err","send","req","isEmpty","query","findAll","catch","where","weekenum","WorkerId","workerid","find","_id","params","id","ProjectId","include","body","sequelize"],"mappings":"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","file":"allocation.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/allocations              ->  index\n * POST    /api/allocations              ->  create\n * GET     /api/allocations/:id          ->  show\n * PUT     /api/allocations/:id          ->  update\n * DELETE  /api/allocations/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport {Allocation} from '../../sqldb';\nimport {Worker} from '../../sqldb';\nimport {Project} from '../../sqldb';\nvar Sequelize = require(\"sequelize\");\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    return entity.updateAttributes(updates)\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.destroy()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Allocations\nexport function index(req, res) {\n  if (_.isEmpty(req.query))\n  {\n    return Allocation.findAll()\n      .then(respondWithResult(res))\n      .catch(handleError(res));\n  }\n  else\n  {\n     return Allocation.findAll({ where: {\n                                        weekenum: req.query.weekenum, \n                                        WorkerId: req.query.workerid} \n                                      })\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n  }\n}\n\n// Gets a single Allocation from the DB\nexport function show(req, res) {\n  return Allocation.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function showProjectAllocations(req, res) {\n  return Allocation.findAll({\n    where: {\n      ProjectId: req.params.id\n    },\n    include: [Worker]\n  })\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Allocation in the DB\nexport function create(req, res) {\n  return Allocation.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n\nexport function showtotal( req, res){\n  return Allocation.sequelize.query('CALL GetTotalAllocations();')\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\nexport function showWorkload( req, res){\n  return Allocation.sequelize.query('CALL GetWorkloadAllocations();')\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n\nexport function showWeeklyProjects(req, res) {\n  return Allocation.findAll({\n    where: {\n      weekenum: req.query.weekenum,\n      WorkerId: req.query.workerid\n    },\n    include: [Worker],\n    include: [Project]\n  })\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Allocation in the DB\nexport function update(req, res) {\n\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Allocation.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Allocation from the DB\nexport function destroy(req, res) {\n  return Allocation.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}