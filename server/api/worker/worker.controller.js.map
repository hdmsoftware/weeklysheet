{"version":3,"sources":["../../../../server/api/worker/worker.controller.js"],"names":["index","index1","show","create","update","destroy","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updateAttributes","then","updated","removeEntity","end","handleEntityNotFound","handleError","err","send","req","findAll","include","order","catch","find","where","_id","params","id","body"],"mappings":"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","file":"worker.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/workers              ->  index\n * POST    /api/workers              ->  create\n * GET     /api/workers/:id          ->  show\n * PUT     /api/workers/:id          ->  update\n * DELETE  /api/workers/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport {Worker} from '../../sqldb';\nimport {Department} from '../../sqldb';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    return entity.updateAttributes(updates)\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.destroy()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Workers\nexport function index(req, res) {\n  return Worker.findAll({include: [Department], order: \"firstname ASC\",})\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a list of Workers\nexport function index1(req, res) {\n  return Worker.findAll()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Worker from the DB\nexport function show(req, res) {\n  return Worker.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Worker in the DB\nexport function create(req, res) {\n  return Worker.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Worker in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Worker.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Worker from the DB\nexport function destroy(req, res) {\n  return Worker.find({\n    where: {\n      _id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}